{
    "Description": "VPN AWS - Servidor VPN para conectarse con el AVET",
    "Outputs": {
        "VPCId": {
            "Description": "VPCId of the newly created VPC",
            "Value": {
                "Ref": "MainVPC"
            }
        }
    },
    "Parameters": {
        "AvailabilityZoneA": {
            "ConstraintDescription": "Must be an existaint Availability Zone in the specific Region.",
            "Default": "eu-west-1a",
            "Description": "Availability Zone to be assigned in the Subnet A.",
            "MinLength": "1",
            "Type": "String"
        },
        "AvailabilityZoneB": {
            "ConstraintDescription": "Must be an existaint Availability Zone in the specific Region.",
            "Default": "eu-west-1b",
            "Description": "Availability Zone to be assigned in the Subnet B.",
            "MinLength": "1",
            "Type": "String"
        },
        "AvailabilityZoneC": {
            "ConstraintDescription": "Must be an existaint Availability Zone in the specific Region.",
            "Default": "eu-west-1c",
            "Description": "Availability Zone to be assigned in the Subnet C.",
            "MinLength": "1",
            "Type": "String"
        },
        "SubnetCIDRa": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.50.16.0/24",
            "Description": "IP Address range for the VPN connected Subnet",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "SubnetCIDRb": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.50.32.0/24",
            "Description": "IP Address range for the VPN connected Subnet",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "SubnetCIDRc": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.50.64.0/24",
            "Description": "IP Address range for the VPN connected Subnet",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.50.0.0/16",
            "Description": "IP Address range for the VPN connected VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Resources": {
        "ELBSecurityGroup": {
            "DependsOn": "MainVPC",
            "Properties": {
                "GroupDescription": "ELB Avet HTTTP/S from anywhere",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "ToPort": 443
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": -1,
                        "IpProtocol": "icmp",
                        "ToPort": -1
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-ELB"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "aws-elasticache"
                    },
                    {
                        "Key": "Type",
                        "Value": "elasticache"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "Ec2SecurityGroup": {
            "DependsOn": "MainVPC",
            "Properties": {
                "GroupDescription": "EC2 API PHP HTTTP/S from anywhere",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 60000,
                        "IpProtocol": "tcp",
                        "ToPort": 60000
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "ToPort": 443
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 6379,
                        "IpProtocol": "tcp",
                        "ToPort": 6379
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": -1,
                        "IpProtocol": "icmp",
                        "ToPort": -1
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "ToPort": 22
                    },
                    {
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        },
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": -1,
                        "IpProtocol": "icmp",
                        "ToPort": -1
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-EC2-API"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "aws-elasticache"
                    },
                    {
                        "Key": "Type",
                        "Value": "elasticache"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "ElasticacheSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable access of the EC2 instances to the Elasticache",
                "SecurityGroupIngress": [
                    {
                        "FromPort": 6379,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Ref": "Ec2SecurityGroup"
                        },
                        "ToPort": 6379
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-REDIS"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "aws-elasticache"
                    },
                    {
                        "Key": "Type",
                        "Value": "elasticache"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "IgAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "internetGateway"
                },
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "MainVPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-LaLiga"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "LaLiga"
                    },
                    {
                        "Key": "Type",
                        "Value": "vpc"
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "OutBoundPublicNetworkAclEntryInA": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "false",
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "OutBoundPublicNetworkAclEntryOutA": {
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "PublicNetworkAcl"
                },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PublicNetworkAcl": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PublicRouteTable": {
            "DependsOn": [
                "IgAttachment"
            ],
            "Properties": {
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-RouteTable"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "RouteTable"
                    },
                    {
                        "Key": "Type",
                        "Value": "routetable"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "SubnetA": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneA"
                },
                "CidrBlock": {
                    "Ref": "SubnetCIDRa"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-SubnetA"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "VPNSubnetA"
                    },
                    {
                        "Key": "Type",
                        "Value": "subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "SubnetB": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneB"
                },
                "CidrBlock": {
                    "Ref": "SubnetCIDRb"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-SubnetB"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "VPNSubnetB"
                    },
                    {
                        "Key": "Type",
                        "Value": "subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "SubnetC": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZoneC"
                },
                "CidrBlock": {
                    "Ref": "SubnetCIDRc"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-SubnetC"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "VPNSubnetC"
                    },
                    {
                        "Key": "Type",
                        "Value": "subnet"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "SubnetRouteTableAssociationA": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetA"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociationB": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetB"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "SubnetRouteTableAssociationC": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "SubnetC"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "VPNSecurityGroup": {
            "DependsOn": "MainVPC",
            "Properties": {
                "GroupDescription": "VPN Allows UDP access",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "ToPort": 22
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 500,
                        "IpProtocol": "tcp",
                        "ToPort": 500
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 1723,
                        "IpProtocol": "tcp",
                        "ToPort": 1723
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 500,
                        "IpProtocol": "udp",
                        "ToPort": 500
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 4500,
                        "IpProtocol": "udp",
                        "ToPort": 4500
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 1723,
                        "IpProtocol": "udp",
                        "ToPort": 1723
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 1701,
                        "IpProtocol": "udp",
                        "ToPort": 1701
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": -1,
                        "IpProtocol": "icmp",
                        "ToPort": -1
                    }
                ],
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-VPN"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "aws-elasticache"
                    },
                    {
                        "Key": "Type",
                        "Value": "elasticache"
                    }
                ],
                "VpcId": {
                    "Ref": "MainVPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "internetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Environment",
                        "Value": "Pre"
                    },
                    {
                        "Key": "Name",
                        "Value": "Avet-InternetGateway"
                    },
                    {
                        "Key": "SpecificName",
                        "Value": "InternetGateway"
                    },
                    {
                        "Key": "Type",
                        "Value": "igateway"
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "internetGatewayRoute": {
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "internetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        }
    }
}
